<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wondertek.mybatis.mapper.DepartmentMapper">


    <!--
        collection:嵌套结果集的方式，定义关联的集合元素的属性关联规则
    -->
    <resultMap id="myDept" type="com.wondertek.mybatis.domain.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!--collection定义关联集合类型的属性的封装规则-->
        <collection property="emps" ofType="com.wondertek.mybatis.domain.Employee">
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email" />
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <!--Department getDeptByIdPlus(Integer id);-->
    <select id="getDeptByIdPlus" resultMap="myDept">
        SELECT d.id did,d.dept_name dept_name,
               e.id eid,e.last_name last_name,e.email email,e.gender gender
        FROM tb_dept d
        LEFT JOIN tb_employee e
        ON d.id = e.d_id
        WHERE d.id = 1;
    </select>

    <!--分步查询-->
    <resultMap id="myDepStep" type="com.wondertek.mybatis.domain.Department">
        <id column="id" property="id"/>
        <result column="departmentName" property="departmentName"/>
        <collection property="emps"
                    select="com.wondertek.mybatis.mapper.EmployeeMapperPlus.getEmpsByDeptId"
                    column="id" fetchType="lazy">

        </collection>
    </resultMap>
    <!--Department getDeptByIdStep(Integer id);-->
    <select id="getDeptByIdStep" resultMap="myDepStep">
        SELECT id,dept_name departmentName FROM tb_dept WHERE id = #{id}
    </select>

    <!--
        扩展：多列的值传递
        将多列的值封装map传递
        column="{key1=column1,key2=column2}"
        fetchType="lazy" : 表示延迟加载
                "eager" 立即查询
    -->









</mapper>